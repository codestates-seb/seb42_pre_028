plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2" // docs 설정추가
}

group = 'Preproject-28'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExtensions // docs 설정추가
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets")) // docs 설정추가
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-security' // 기본코드 구현시 잠시 비활성화
	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'  // docs 설정추가
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'  // docs 설정추가
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test' // 기본코드 구현시 잠시 비활성화

	implementation 'org.mapstruct:mapstruct:1.5.2.Final' //mapper 자동작성 mapstruct 추가
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final' //mapper 자동작성 mapstruct 추가

	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'com.google.code.gson:gson:2.10.1' // test json 변환용
	testAnnotationProcessor 'org.projectlombok:lombok' // test log 작성용
}

tasks.named('test') {
	outputs.dir snippetsDir  // docs 설정추가
	useJUnitPlatform()
}
tasks.named('asciidoctor') {  // docs 설정추가
	configurations "asciidoctorExtensions"
	inputs.dir snippetsDir
	dependsOn test
}
task copyDocument(type: Copy) {   // docs 설정추가
	dependsOn asciidoctor
	from file("${asciidoctor.outputDir}")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument  // docs 설정추가
}

bootJar { // docs 설정추가
	dependsOn copyDocument
	from("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}